{"version":3,"sources":["../index.ts"],"sourcesContent":["import { writable as internal, type Writable } from 'svelte/store'\n\ndeclare type Updater<T> = (value: T) => T;\ndeclare type StoreDict<T> = { [key: string]: Writable<T> }\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\ninterface Stores {\n  local: StoreDict<any>,\n  session: StoreDict<any>,\n}\n\nconst stores: Stores = {\n  local: {},\n  session: {}\n}\n\nexport interface Serializer<T> {\n  parse(text: string): T\n  stringify(object: T): string\n}\n\nexport type StorageType = 'local' | 'session'\n\nexport interface Options<T> {\n  serializer?: Serializer<T>\n  storage?: StorageType,\n  syncTabs?: boolean,\n  onError?: (e: unknown) => void\n}\n\nfunction getStorage(type: StorageType) {\n  return type === 'local' ? localStorage : sessionStorage\n}\n\n/** @deprecated `writable()` has been renamed to `persisted()` */\nexport function writable<T>(key: string, initialValue: T, options?: Options<T>): Writable<T> {\n  console.warn(\"writable() has been deprecated. Please use persisted() instead.\\n\\nchange:\\n\\nimport { writable } from 'svelte-persisted-store'\\n\\nto:\\n\\nimport { persisted } from 'svelte-persisted-store'\")\n  return persisted<T>(key, initialValue, options)\n}\nexport function persisted<T>(key: string, initialValue: T, options?: Options<T>): Writable<T> {\n  const serializer = options?.serializer ?? JSON\n  const storageType = options?.storage ?? 'local'\n  const syncTabs = options?.syncTabs ?? true\n  const onError = options?.onError ?? ((e) => console.error(`Error when writing value from persisted store \"${key}\" to ${storageType}`, e))\n  const browser = typeof (window) !== 'undefined' && typeof (document) !== 'undefined'\n  const storage = browser ? getStorage(storageType) : null\n\n  function updateStorage(key: string, value: T) {\n    try {\n      storage?.setItem(key, serializer.stringify(value))\n    } catch (e) {\n      onError(e)\n    }\n  }\n\n  function maybeLoadInitial(): T {\n    const json = storage?.getItem(key)\n\n    if (json) {\n      return <T>serializer.parse(json)\n    }\n\n    return initialValue\n  }\n\n  if (!stores[storageType][key]) {\n    const initial = maybeLoadInitial()\n    const store = internal(initial, (set) => {\n      if (browser && storageType == 'local' && syncTabs) {\n        const handleStorage = (event: StorageEvent) => {\n          if (event.key === key)\n            set(event.newValue ? serializer.parse(event.newValue) : null)\n        }\n\n        window.addEventListener(\"storage\", handleStorage)\n\n        return () => window.removeEventListener(\"storage\", handleStorage)\n      }\n    })\n\n    const { subscribe, set } = store\n\n    stores[storageType][key] = {\n      set(value: T) {\n        set(value)\n        updateStorage(key, value)\n      },\n      update(callback: Updater<T>) {\n        return store.update((last) => {\n          const value = callback(last)\n\n          updateStorage(key, value)\n\n          return value\n        })\n      },\n      subscribe\n    }\n  }\n\n  return stores[storageType][key]\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAoD;AAWpD,IAAM,SAAiB;AAAA,EACrB,OAAO,CAAC;AAAA,EACR,SAAS,CAAC;AACZ;AAgBA,SAAS,WAAW,MAAmB;AACrC,SAAO,SAAS,UAAU,eAAe;AAC3C;AAGO,SAAS,SAAY,KAAa,cAAiB,SAAmC;AAC3F,UAAQ,KAAK,8LAA8L;AAC3M,SAAO,UAAa,KAAK,cAAc,OAAO;AAChD;AACO,SAAS,UAAa,KAAa,cAAiB,SAAmC;AAvC9F;AAwCE,QAAM,cAAa,wCAAS,eAAT,YAAuB;AAC1C,QAAM,eAAc,wCAAS,YAAT,YAAoB;AACxC,QAAM,YAAW,wCAAS,aAAT,YAAqB;AACtC,QAAM,WAAU,wCAAS,YAAT,YAAqB,CAAC,MAAM,QAAQ,MAAM,kDAAkD,GAAG,QAAQ,WAAW,IAAI,CAAC;AACvI,QAAM,UAAU,OAAQ,WAAY,eAAe,OAAQ,aAAc;AACzE,QAAM,UAAU,UAAU,WAAW,WAAW,IAAI;AAEpD,WAAS,cAAcA,MAAa,OAAU;AAC5C,QAAI;AACF,yCAAS,QAAQA,MAAK,WAAW,UAAU,KAAK;AAAA,IAClD,SAAS,GAAG;AACV,cAAQ,CAAC;AAAA,IACX;AAAA,EACF;AAEA,WAAS,mBAAsB;AAC7B,UAAM,OAAO,mCAAS,QAAQ;AAE9B,QAAI,MAAM;AACR,aAAU,WAAW,MAAM,IAAI;AAAA,IACjC;AAEA,WAAO;AAAA,EACT;AAEA,MAAI,CAAC,OAAO,WAAW,EAAE,GAAG,GAAG;AAC7B,UAAM,UAAU,iBAAiB;AACjC,UAAM,YAAQ,aAAAC,UAAS,SAAS,CAACC,SAAQ;AACvC,UAAI,WAAW,eAAe,WAAW,UAAU;AACjD,cAAM,gBAAgB,CAAC,UAAwB;AAC7C,cAAI,MAAM,QAAQ;AAChB,YAAAA,KAAI,MAAM,WAAW,WAAW,MAAM,MAAM,QAAQ,IAAI,IAAI;AAAA,QAChE;AAEA,eAAO,iBAAiB,WAAW,aAAa;AAEhD,eAAO,MAAM,OAAO,oBAAoB,WAAW,aAAa;AAAA,MAClE;AAAA,IACF,CAAC;AAED,UAAM,EAAE,WAAW,IAAI,IAAI;AAE3B,WAAO,WAAW,EAAE,GAAG,IAAI;AAAA,MACzB,IAAI,OAAU;AACZ,YAAI,KAAK;AACT,sBAAc,KAAK,KAAK;AAAA,MAC1B;AAAA,MACA,OAAO,UAAsB;AAC3B,eAAO,MAAM,OAAO,CAAC,SAAS;AAC5B,gBAAM,QAAQ,SAAS,IAAI;AAE3B,wBAAc,KAAK,KAAK;AAExB,iBAAO;AAAA,QACT,CAAC;AAAA,MACH;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,SAAO,OAAO,WAAW,EAAE,GAAG;AAChC;","names":["key","internal","set"]}